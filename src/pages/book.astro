---
import Layout from '../layouts/Layout.astro';

import { Image } from 'astro:assets';
import suv from '../assets/SUV.png';
import town from '../assets/Town.png';
import Van from '../assets/Van.png';
import Limousine from '../assets/Limousine.png';

const turnstileSiteKey = import.meta.env.PUBLIC_TURNSTILE_SITE_KEY;
var responseMessage = '';
if (Astro.request.method === 'POST') {
  try{
    const data = await Astro.request.formData();
    const token = data.get("cf-turnstile-response");

  let formData = new FormData();
  formData.append("secret", '0x4AAAAAAARyPTQ7VAXpuw53CHh-idHnfZ0');
  formData.append("response", token);

  const result = await fetch(
    "https://challenges.cloudflare.com/turnstile/v0/siteverify",
    {
      body: formData,
      method: "POST",
    }
  );
  const outcome = await result.json();
  
  if (!outcome.success) {
    console.log("turnstile invalid");
    responseMessage = "Turnstile verification failed. Please try again.";
  } else {
    await sendEmail(data);
    responseMessage = "Thanks for reaching out.";
    return new Response(
    JSON.stringify({
      message: "Success!"
    }),
    { status: 200 }
  );
  }
  } catch (error) {
    responseMessage = "An error occurred. Please try again later.";
  }
}

async function sendEmail(data) {
  const message = `
  <html>
    <body>
      <p><strong>Full Name:</strong> ${data.get("full_name")}</p>
      <p><strong>Email:</strong> ${data.get("email")}</p>
      <p><strong>Phone:</strong> ${data.get("phone")}</p>
      <p><strong>Pickup Address:</strong> ${data.get("pickup-address")}</p>
      <p><strong>Pickup Date:</strong> ${data.get("pickup-date")}</p>
      <p><strong>Drop-off Address:</strong> ${data.get("dropoff-address")}</p>
      <p><strong>Passengers:</strong> ${data.get("passengers")}</p>
      <p><strong>Bags:</strong> ${data.get("bags")}</p>
      <p><strong>Preferred Vehicle:</strong> ${data.get("preferred-vehicle")}</p>
      <p><strong>Flight Number:</strong> ${data.get("flightnumber")}</p>
      <p><strong>Child Seat:</strong> ${data.get("childseat") == null ? 'No' : 'Yes'}</p>
      <p><strong>Booster Seat:</strong> ${data.get("boosterseat") == null ? 'No' : 'Yes'}</p>
      <p><strong>Comments:</strong> ${data.get("comments")}</p>
    </body>
  </html>`;
  const response = await fetch("https://api.mailchannels.net/tx/v1/send", {
        method: "POST",
        headers: {
            'content-type': 'application/json',
        },
        body: JSON.stringify({
            personalizations: [
                {
                    to: [{ email: 'hassaan@swyftlogic.org', name: 'Hassaan' }],
                },
            ],
            from: {
                email: 'info@orlandosuperiortransportation.com',
                name: "Website",
            },
            subject: 'Website Inquiry',
            content: [
                {
                    type: 'text/html',
                    value: message,
                },
            ],
        }),
    })
}
---

<Layout title="Orlando Transportatation Book Luxury Vechicle">
  <svelte:head>
      <script src="https://challenges.cloudflare.com/turnstile/v0/api.js" async defer></script>
 </svelte:head>
<!-- component -->
  <div class="container max-w-screen-lg mx-auto">
    <h1 class="text-center pt-4 pb-3 mt-3">Book Your Private <span class="text-yellow-700">Transportation</span> In Orlando!</h1>

      <div class="bg-white rounded shadow-lg p-4 px-4 md:p-8 mb-6 max-w-4xl mx-auto" >
          <div class="text-gray-600 text-center">
            <p class="font-medium text-2xl">Make a Reservation</p>
            <p class="pb-4">Booking Online With Orlando Transportations Service Is Fast, Easy, & Secure.</p>
          </div>
          <form method="POST">
            {fullname}
            <div class="flex flex-col grid grid-cols-6 gap-4">
              <div class="col-span-6 lg:col-span-2 mt-2">
                <label for="full_name">Full Name</label>
                <input type="text" required name="full_name" id="full_name" class="h-10 border mt-1 rounded w-full bg-gray-50" value="" />
              </div>

              <div class="col-span-3 lg:col-span-2 mt-2">
                <label for="email">Email Address</label>
                <input type="email" required name="email" id="email" class="h-10 border mt-1 rounded  w-full bg-gray-50" value="" placeholder="email@domain.com" />
              </div>

              <div class="col-span-3 lg:col-span-2 mt-2">
                <label for="Phone">Phone No.</label>
                <input type="tel" required name="phone" id="phone" class="h-10 border mt-1 rounded  w-full bg-gray-50" value="" />
              </div>

              <div class="col-span-6 lg:col-span-4 mt-2">
                <label for="pickup-address">Pick Up Address</label>
                <input type="text" required name="pickup-address" id="pickup-address" class="h-10 border mt-1 rounded  w-full bg-gray-50" value="" placeholder="" />
              </div>


              <div class="col-span-6 lg:col-span-2 mt-2">
                <label for="pickup-date">Pick Up Date Time</label>
                <input type="datetime-local" name="pickup-date" id="pickup-date" class="h-10 border mt-1 rounded  w-full bg-gray-50" value={(function () {
                  const currentDate = new Date();
                  const newDate = new Date(currentDate.getTime() + 30 * 60000);
                  return newDate.toISOString().slice(0, 16);
                })()} placeholder="" />
              </div>

              <div class="col-span-6 lg:col-span-4 mt-2">
                <label for="dropoff-address">Drop Off Address</label>
                <input type="text" name="dropoff-address" id="dropoff-address" class="h-10 border mt-1 rounded  w-full bg-gray-50" value="" placeholder="" />
              </div>

              <div class="col-span-3 lg:col-span-1 mt-2">
                <label for="passengers">Passengers</label>
                <div class="h-10 w-33 bg-gray-50 flex border border-gray-200 rounded items-center mt-1">
                  <button tabindex="-1" for="show_more" class="cursor-pointer outline-none focus:outline-none border-r border-gray-200 transition-all text-gray-500 hover:text-blue-600">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mx-2" viewBox="0 0 20 20" fill="currentColor">
                      <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
                    </svg>
                  </button>
                  <input name="passengers" id="passengers" placeholder="0" class="border-0 px-2 text-center appearance-none outline-none text-gray-800 w-full bg-transparent" value="0" />
                  <button tabindex="-1" for="show_more" class="cursor-pointer outline-none focus:outline-none border-l border-gray-200 transition-all text-gray-500 hover:text-blue-600">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mx-2 fill-current" viewBox="0 0 20 20" fill="currentColor">
                      <path fill-rule="evenodd" d="M14.707 12.707a1 1 0 01-1.414 0L10 9.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 010 1.414z" clip-rule="evenodd" />
                    </svg>
                  </button>
                </div>
              </div>

              <div class="col-span-3 lg:col-span-1 mt-2">
                <label for="bags">Bags</label>
                <div class="h-10 w-33 bg-gray-50 flex border border-gray-200 rounded items-center mt-1">
                  <button tabindex="-1" for="show_more" class="cursor-pointer outline-none focus:outline-none border-r border-gray-200 transition-all text-gray-500 hover:text-blue-600">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mx-2" viewBox="0 0 20 20" fill="currentColor">
                      <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
                    </svg>
                  </button>
                  <input name="bags" id="bags" placeholder="0" class="border-0 px-2 text-center appearance-none outline-none text-gray-800 w-full bg-transparent" value="0" />
                  <button tabindex="-1" for="show_more" class="cursor-pointer outline-none focus:outline-none border-l border-gray-200 transition-all text-gray-500 hover:text-blue-600">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mx-2 fill-current" viewBox="0 0 20 20" fill="currentColor">
                      <path fill-rule="evenodd" d="M14.707 12.707a1 1 0 01-1.414 0L10 9.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 010 1.414z" clip-rule="evenodd" />
                    </svg>
                  </button>
                </div>
              </div>

              <div class="col-span-3 lg:col-span-2 mt-2">
                <label for="pickup-address">Preferred Vehicle</label>
                <select name="preferred-vehicle" id="preferred-vehicle" class="h-10 border mt-1 rounded  w-full bg-gray-50" value="">
                  <option value="Town Car">Town Car</option>
                  <option value="SUV">SUV</option>
                  <option value="Van">Van</option>
                  <option value="Mini Van">Mini Van</option>
                  <option value="Limosine">Limosine</option>
                  </select>
                
              </div>


              <div class="col-span-3 lg:col-span-2 mt-2">
                <label for="flightnumber">Flight Number</label>
                <input type="text" name="flightnumber" id="flightnumber" class="transition-all flex items-center h-10 border mt-1 rounded  w-full bg-gray-50" placeholder="" value="" />
              </div>

              <div class="col-span-3 lg:col-span-1 flex align-item-end mt-2">
                <div class="inline-flex items-center">
                  <input type="checkbox" name="childseat" id="childseat" class="form-checkbox" />
                  <label for="childseat" class="ml-2">Child Seat</label>
                </div>
              </div>

              <div class="col-span-3 lg:col-span-1 flex align-item-center mt-2">
                <div class="inline-flex items-center">
                  <input type="checkbox" name="boosterseat" id="boosterseat" class="form-checkbox" />
                  <label for="boosterseat" class="ml-2">Booster Seat</label>
                </div>
              </div>

              <div class="col-span-6 mt-2">
                <label for="comments">Customer Comments Or Special Requests</label>
                <textarea type="text" name="comments" id="comments" class="h-30 border mt-1 rounded  w-full bg-gray-50" value="" placeholder="" />
              </div>

              <div class="cf-turnstile" data-sitekey={turnstileSiteKey} data-size="compact" />     

              <div class="col-span-6 text-right">
                <div class="inline-flex items-end">
                  <button type="submit" class="max-w-max leading-4 py-3 text-2lg bg-transparent hover:bg-yellow-600 border-2 border-black  px-6 text-center rounded text-black hover:text-white">Submit</button>
                </div>
              </div>
            </div>
          </form>
       
      </div>



</div>

<!-- <script>
  var contactForms = document.querySelectorAll(".contact-form");
contactForms.forEach(form => {
    form.addEventListener('submit', async (event) => {
        event.preventDefault();
debugger;
        fetch(event.target.action, {
            method: 'POST',
            body: new FormData(event.target)
        }).then((response) => {
            if (!response.ok) {
                throw new Error(`HTTP error! Status: ${response.status}`);
            }
            return response.json();
        }).then((body) => {

        });
    });
});
</script> -->
</Layout>